{
  
    
        "post0": {
            "title": "Fon L1 1 Notes",
            "content": "Introduction . Electronics are becoming smaller and more powerful. This happens as transistor size increases and therefore packing more and more into smaller chips. Channels are now a few hundred or less atoms across. It is hard to predict where the technology will be in a few years. Instead this course focuses on the fundamentals or nanoelectronics which are expected to stand the test of time. . Conduction . We start with the notion of conduction and conductance. It measures how easily electrons can flow. The resistance $R = rho frac{L}{A}$ and the conductance $G = frac{1}{R} = sigma frac{A}{L}$. . $ rho$ and $ sigma$ are fundamental properties of the conducting material. . Top-Down Approach . Traditionally, electron flow is modeled as a diffusive process. Here electrons collide with each other in the channel and move from one contact to the other in a random walk. In this framework, the conductivity $ sigma$ is formulated with the Drude Formula: . $ sigma = frac{q^2n}{m} tau$. . Here $q$ is the charge of the electron, $n$ is the number of free electrons, $ tau$ is the mean free time and $m$ is the effective mass. . Bottom-Up Approach . Here we start with the notion of ballistic transport. This applies to devices where the channel is shorter than the mean free path. This means, there are no collisions and electrons move from one contact to the other like a bullet. In case of ballistic transport, the conductance is: . $G_B = frac{q^2}{h}M$ . Here q is again the charge of the electron, h is the Planck’s constant and M is the number of modes which will be described in detail in a later lesson but for now can be considered to be like the number of lanes in a highway. We can see here that q^2/h is a fundamental constant which is approx. 1/(25 kOhm). . This conductance can be generalized to bigger devices as well: . $G = G_B frac{ lambda}{L+ lambda} $ . Here $ lambda$ is the mean free path. . In the above equation we can see that if L is much larger than $ lambda$, . $G = G_B frac{ lambda}{L}$ . Comparing this to the original definition of G, we get . $G_B lambda = sigma A$ . Current Flow . To understand current flow in transistors, we need to start with energy diagrams. The source is filled with electrons. Electrons try to move to the lowest possible energy level but due to exclusion, only one electron can occupy a level. This leads to the source having many energy levels with electrons upto a level $ mu_1$ which is the electrochemical potential of the source. The drain also has a similar structure with its own electrochemical potential $ mu_2$ but it is also lowered by the voltage V applied to the drain. Thus it is at $ mu_2 - qV$. . Now at the source, it sees a potential difference and it tries to neutralize this by pushing electrons into the channel. At the other end, the drain is at a lowered energy level, it tries to neutralize this by taking electrons from the channel. This leads to current flow. We derive the formula for the conductance later and we get: . $G = frac{q^2D}{2t}$ . Here D is the density of states near the Fermi level and t is the transfer time. . To derive the Drude formula, we start with Newtonian mechanics. . $m frac{dv_d}{dt} = qF - m frac{v_d}{ tau} $ . Here on the LHS is the force defined as $ma$ with $v_d$ being the drift velocity and on the RHS, we have F as the electric field and $m frac{v_d}{ tau}$ is the viscous force due to the material. At steady state, LHS is zero, therefore we have . $v_d = frac{q tau}{m}F$ . $ frac{q tau}{m}$ is considered the mobility. . The current, . $I = Aqnvd = A frac{q^2n tau}{m}F $ . $F = frac{V}{L}$ and therefore we get the Drude formula. . But in this formalism starting with the notion of electric field, it is not clear why all electrons in the contact don’t move across the channel. It is known that only electrons around the Fermi level contribute to the current. It works around this with the concept of free electrons which only exist in the conduction band. Filled bands do not conduct. . Describing current flow in terms of electron flow around the Fermi level leads to both the ballistic and diffusive conductance. The more general diffusive conductance is defined as: . $G = frac{q^2 D bar{D}}{AL} $ . Here $ bar{D}$ is the diffusion coefficient. . Deriving this formula requires advanced formalisms such as the Boltzmann formalism but in our picture, it naturally comes up. This will be done in a later lecture. . Elastic Resistor . We reach this with the concept of an elastic resistor, also known as a Landauer resistor. When electrons travel from one contact to another, there is heat dissipation. It is observed that in case of small devices, where ballistic transport comes into picture, most of the heat is dissipated at the contacts. . Usually, electron motion is a mix of thermodynamics and mechanics. Mechanics is dominated by force driven actions while thermodynamics is dominated by entropy driven actions. To describe electron flow it usually requires combining semi-classical mechanics and entropy driven actions using the Boltzmann Transport Equation. In case of quantum mechanics, it requires combining the Schrodinger equation and entropy driven actions using the Non-equilibrium Green’s Function. . But in case of elastic resistors, this forms almost a clearly separated action, with the thermodynamic forces at the contacts and the mechanical forces dominating at the channel. Thus understanding electron flow is comparatively easier. This can be used for both ballistic and diffusive transport. . In case of big devices, they are modeled as a series of small elastic resistors. So the electron moves elastically from one point to the next, loses some energy, elastically again and so on. Elastic transport means the electron does not lose any energy to the lattice. So even with a diffusive motion, it can be elastic. Ballistic on the other hand means it does lose momentum. The results at low bias match exactly with the Boltzmann formalism. At high bias, we still get a good enough approximation. . The next lecture focuses on the density of states and the Fermi function. .",
            "url": "https://dtrik.github.io/fon/2020/11/27/fon-l1-1-notes.html",
            "relUrl": "/2020/11/27/fon-l1-1-notes.html",
            "date": " • Nov 27, 2020"
        }
        
    
  
    
        ,"post1": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master- badges: true- comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://dtrik.github.io/fon/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post2": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://dtrik.github.io/fon/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://dtrik.github.io/fon/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://dtrik.github.io/fon/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}